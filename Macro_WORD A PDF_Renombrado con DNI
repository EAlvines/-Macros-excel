'MACRO EN EXCEL PARA GUARDAR CADA HOJA DE WORD EN UN PDF SEPARADO – NOMBRANDO EL PDF CON EL DNI (Número de 8digitos)
Sub Cambia_PDF_con_DNI()
'
' Cambia_PDF_con_DNI Macro
'
'
    Dim I As Long
    Dim xPathStr As Variant
    Dim xFileDlg As FileDialog
    Dim xStartPage, xEndPage As Long
    Dim xStartPageStr, xEndPageStr As String
    Dim pdfFileName As String
    Dim rngPage As Range

    Set xFileDlg = Application.FileDialog(msoFileDialogFolderPicker)
    
    ' Selecciona la carpeta donde se guardarán los PDFs
    If xFileDlg.Show <> -1 Then
        MsgBox "Por favor selecciona un directorio válido", vbInformation, "@easyexcelexpert"
        Exit Sub
    End If
    xPathStr = xFileDlg.SelectedItems(1)
    
    ' Pide al usuario que ingrese la página de inicio y fin
    xStartPageStr = InputBox("Guardar PDFs desde la página __? " & vbNewLine & "(ejemplo: 1)", "EasyExcelExpert")
    xEndPageStr = InputBox("Guardar PDFs hasta la página __?" & vbNewLine & "(ejemplo: 7)", "EasyExcelExpert")
    
    If Not (IsNumeric(xStartPageStr) And IsNumeric(xEndPageStr)) Then
        MsgBox "La página inicial y final deben estar en formato numérico", vbInformation, "EasyExcelExpert"
        Exit Sub
    End If
    
    xStartPage = CInt(xStartPageStr)
    xEndPage = CInt(xEndPageStr)
    
    ' Verifica que la página de inicio no sea mayor que la página final
    If xStartPage > xEndPage Then
        MsgBox "La página de inicio no puede ser mayor a la página final", vbInformation, "EasyExcelExpert"
        Exit Sub
    End If
    
    ' Ajusta el número de la última página si es mayor que el número de páginas del documento
    If xEndPage > ActiveDocument.BuiltInDocumentProperties(wdPropertyPages) Then
        xEndPage = ActiveDocument.BuiltInDocumentProperties(wdPropertyPages)
    End If
    
    ' Bucle para cada página desde el inicio hasta el final especificado
    For I = xStartPage To xEndPage
        
        ' Establece el rango de la página actual
        Set rngPage = ActiveDocument.Range.GoTo(wdGoToPage, wdGoToAbsolute, I)
        rngPage.End = ActiveDocument.Range.GoTo(wdGoToPage, wdGoToAbsolute, I + 1).Start - 1

        ' Aquí obtenemos el nombre del PDF a partir de un número de 8 dígitos en la página actual
        pdfFileName = ObtenerNumero8Digitos(rngPage)
        
        ' Si no encuentra un número válido, usa un nombre genérico
        If pdfFileName = "" Then
            pdfFileName = "Page_" & I
        End If
        
        ' Exporta la página actual a PDF con el nombre extraído
        ActiveDocument.ExportAsFixedFormat xPathStr & "\" & pdfFileName & ".pdf", _
        wdExportFormatPDF, False, wdExportOptimizeForPrint, wdExportFromTo, I, I, wdExportDocumentWithMarkup, _
        False, False, wdExportCreateHeadingBookmarks, True, False, False
    Next

End Sub

' Función para obtener un número de 8 dígitos en un rango específico (una página)
Function ObtenerNumero8Digitos(rngPage As Range) As String
    Dim re As Object
    Dim match As Object
    Set re = CreateObject("VBScript.RegExp")
    
    ' Configura la expresión regular para buscar un número de 8 dígitos
    re.Pattern = "\b\d{8}\b" ' Busca un número de exactamente 8 dígitos
    re.Global = True
    
    ' Busca el patrón en el texto del rango (que es la página específica)
    If re.Test(rngPage.Text) Then
        Set match = re.Execute(rngPage.Text)
        ' Devuelve el primer número de 8 dígitos encontrado
        ObtenerNumero8Digitos = match(0).Value
    Else
        ObtenerNumero8Digitos = "" ' Devuelve cadena vacía si no encuentra el número
    End If
End Function

